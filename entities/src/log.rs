//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "log")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_host: i32,
    pub host_affected: Option<i32>,
    pub key: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub time: i64,
    pub new_value: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::host::Entity",
        from = "Column::UserHost",
        to = "super::host::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Host2,
    #[sea_orm(
        belongs_to = "super::host::Entity",
        from = "Column::HostAffected",
        to = "super::host::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Host1,
}

impl ActiveModelBehavior for ActiveModel {}
